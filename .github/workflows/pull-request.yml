name: Pull Request

on:
  pull_request:
    branches:
      - '*'

jobs:
  initialize:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Cache node_modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

  build:
    needs: initialize
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Restore node_modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

    - name: Build application
      run: npm run build

    - name: Cache build output
      uses: actions/cache@v3
      with:
        path: .next
        key: ${{ runner.os }}-next-build-${{ github.sha }}

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Restore node_modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

    - name: Restore build output
      uses: actions/cache@v3
      with:
        path: .next
        key: ${{ runner.os }}-next-build-${{ github.sha }}

    - name: Start application and verify
      run: |
        npm run start &
        sleep 10
        curl -f http://localhost:3000 || exit 1
      env:
        PORT: 3000

  docker-build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        load: true
        tags: local/app:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Cache Docker image
      uses: actions/cache@v3
      with:
        path: /tmp/docker-image
        key: ${{ runner.os }}-docker-${{ github.sha }}

  docker-test:
    needs: docker-build
    runs-on: ubuntu-latest
    steps:
    - name: Restore Docker image
      uses: actions/cache@v3
      with:
        path: /tmp/docker-image
        key: ${{ runner.os }}-docker-${{ github.sha }}

    - name: Test Docker container
      run: |
        # Stop any existing containers using port 3000
        docker ps -q --filter "publish=3000" | xargs -r docker stop
        
        # Remove any existing container named 'app'
        docker rm -f app || true
        
        # Run the container
        docker run -d -p 3000:3000 --name app local/app:test
        
        # Wait for container to start and show logs
        sleep 15
        docker ps
        docker logs app
        
        # Test the endpoint
        curl -f http://localhost:3000 || (docker logs app && exit 1)
        
        # Cleanup
        docker stop app
        docker rm app
